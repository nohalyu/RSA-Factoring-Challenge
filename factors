#!/usr/bin/python3
"""
Conditions and Requirements:
    Factorize as many numbers as possible into a product of two smaller numbers.
        Usage: factors <file>
            where <file> is a file containing natural numbers to factor.
            One number per line
            You can assume that all lines will be valid natural numbers\
                    greater than 1
            You can assume that there will be no empy line, and no space\
                    before and after the valid number
            The file will always end with a new line
        Output format: n=p*q
            one factorization per line
            p and q don’t have to be prime numbers
            See example
        You can work on the numbers of the file in the order of your choice
        Your program should run without any dependency: You will not be ablei\
                to install anything on the machine we will run your program on
        Time limit: Your program will be killed after 5 seconds\
                if it hasn’t finish
        Push all scripts, source code, etc… to repository
"""
# import arguments from library
from sys import argv


def factorize(value):
    """"this prints the simple de-composition of an integer greater than 1"""
    i = 2

    if value < 2:
        return
    print()
    print(value, "<- value-bef")
    while value % i:
        i += 1
    print("{:.0f}={:.0f}*{:.0f}".format(value, value / i, i))
    print(value, "<- value-aft")
    print()

if len(argv) != 2:
    exit()

try:
    with open(argv[1]) as file:
        line = file.readline()

        while line != "":
            value = int(line.split('\n')[0])
            factorize(value)
            line = file.readline()
except:
    pass
